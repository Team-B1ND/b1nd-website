{"version":3,"file":"static/js/8782.66854cfa.chunk.js","mappings":"2FAAC,WAuBA,SAASA,EAAkBC,EAASC,GACnCD,EAAQE,iBAAiB,SAAS,YAuCnC,SAA6BD,GACxBE,UAAUC,UACbD,UAAUC,UAAUC,UAAUJ,EAASK,WAAWC,KAAKN,EAASO,SAAS,WAExEC,EAA4BR,EAC7B,IAEAQ,EAA4BR,EAE9B,CA/CES,CAAoBT,EACrB,GACD,CAKA,SAASQ,EAA4BR,GACpC,IAAIU,EAAWC,SAASC,cAAc,YACtCF,EAASG,MAAQb,EAASK,UAG1BK,EAASI,MAAMC,IAAM,IACrBL,EAASI,MAAME,KAAO,IACtBN,EAASI,MAAMG,SAAW,QAE1BN,SAASO,KAAKC,YAAYT,GAC1BA,EAASU,QACTV,EAASW,SAET,IACC,IAAIC,EAAaX,SAASY,YAAY,QACtCC,YAAW,WACNF,EACHtB,EAASO,UAETP,EAASyB,OAEX,GAAG,EACJ,CAAE,MAAOC,GACRF,YAAW,WACVxB,EAASyB,MAAMC,EAChB,GAAG,EACJ,CAEAf,SAASO,KAAKS,YAAYjB,EAC3B,CA3DqB,qBAAVkB,OAA6C,qBAAbjB,WAItCiB,MAAMC,QAAQC,QA4GnBF,MAAMC,QAAQC,QAAQC,eAAe,qBAAqB,SAAUC,GACnE,IAAIjC,EAAUiC,EAAIjC,QAEdkC,EA1BL,SAAqBC,GAEpB,IAAID,EAAW,CACd,KAAQ,OACR,aAAc,uBACd,eAAgB,UAChB,eAAgB,KAIjB,IAAK,IAAIE,KAAOF,EAAU,CAGzB,IAFA,IAAIG,EAFQ,gBAEQD,EAChBpC,EAAUmC,EACPnC,IAAYA,EAAQsC,aAAaD,IACvCrC,EAAUA,EAAQuC,cAEfvC,IACHkC,EAASE,GAAOpC,EAAQwC,aAAaH,GAEvC,CACA,OAAOH,CACR,CAKgBO,CAAYzC,GAEvB0C,EAAW9B,SAASC,cAAc,UACtC6B,EAASC,UAAY,2BACrBD,EAASE,aAAa,OAAQ,UAC9B,IAAIC,EAAWjC,SAASC,cAAc,QAyBtC,OAxBA6B,EAAStB,YAAYyB,GAErBC,EAAS,QAET/C,EAAkB2C,EAAU,CAC3BpC,QAAS,WACR,OAAON,EAAQ+C,WAChB,EACAvC,QAAS,WACRsC,EAAS,gBAETE,GACD,EACAtB,MAAO,WACNoB,EAAS,cAETrB,YAAW,YA5Dd,SAA2BzB,GAE1BiD,OAAOC,eAAeC,kBAAkBnD,EACzC,CA0DIoD,CAAkBpD,EACnB,GAAG,GAEHgD,GACD,IAGMN,EAEP,SAASM,IACRvB,YAAW,WAAcqB,EAAS,OAAS,GAAGZ,EAAS,gBACxD,CAGA,SAASY,EAASO,GACjBR,EAASE,YAAcb,EAASmB,GAChCX,EAASE,aAAa,kBAAmBS,EAC1C,CACD,IAvJCC,QAAQC,KAAK,0DAwJd,CA/JA,E","sources":["../node_modules/prismjs/plugins/copy-to-clipboard/prism-copy-to-clipboard.js"],"sourcesContent":["(function () {\n\n\tif (typeof Prism === 'undefined' || typeof document === 'undefined') {\n\t\treturn;\n\t}\n\n\tif (!Prism.plugins.toolbar) {\n\t\tconsole.warn('Copy to Clipboard plugin loaded before Toolbar plugin.');\n\n\t\treturn;\n\t}\n\n\t/**\n\t * When the given elements is clicked by the user, the given text will be copied to clipboard.\n\t *\n\t * @param {HTMLElement} element\n\t * @param {CopyInfo} copyInfo\n\t *\n\t * @typedef CopyInfo\n\t * @property {() => string} getText\n\t * @property {() => void} success\n\t * @property {(reason: unknown) => void} error\n\t */\n\tfunction registerClipboard(element, copyInfo) {\n\t\telement.addEventListener('click', function () {\n\t\t\tcopyTextToClipboard(copyInfo);\n\t\t});\n\t}\n\n\t// https://stackoverflow.com/a/30810322/7595472\n\n\t/** @param {CopyInfo} copyInfo */\n\tfunction fallbackCopyTextToClipboard(copyInfo) {\n\t\tvar textArea = document.createElement('textarea');\n\t\ttextArea.value = copyInfo.getText();\n\n\t\t// Avoid scrolling to bottom\n\t\ttextArea.style.top = '0';\n\t\ttextArea.style.left = '0';\n\t\ttextArea.style.position = 'fixed';\n\n\t\tdocument.body.appendChild(textArea);\n\t\ttextArea.focus();\n\t\ttextArea.select();\n\n\t\ttry {\n\t\t\tvar successful = document.execCommand('copy');\n\t\t\tsetTimeout(function () {\n\t\t\t\tif (successful) {\n\t\t\t\t\tcopyInfo.success();\n\t\t\t\t} else {\n\t\t\t\t\tcopyInfo.error();\n\t\t\t\t}\n\t\t\t}, 1);\n\t\t} catch (err) {\n\t\t\tsetTimeout(function () {\n\t\t\t\tcopyInfo.error(err);\n\t\t\t}, 1);\n\t\t}\n\n\t\tdocument.body.removeChild(textArea);\n\t}\n\t/** @param {CopyInfo} copyInfo */\n\tfunction copyTextToClipboard(copyInfo) {\n\t\tif (navigator.clipboard) {\n\t\t\tnavigator.clipboard.writeText(copyInfo.getText()).then(copyInfo.success, function () {\n\t\t\t\t// try the fallback in case `writeText` didn't work\n\t\t\t\tfallbackCopyTextToClipboard(copyInfo);\n\t\t\t});\n\t\t} else {\n\t\t\tfallbackCopyTextToClipboard(copyInfo);\n\t\t}\n\t}\n\n\t/**\n\t * Selects the text content of the given element.\n\t *\n\t * @param {Element} element\n\t */\n\tfunction selectElementText(element) {\n\t\t// https://stackoverflow.com/a/20079910/7595472\n\t\twindow.getSelection().selectAllChildren(element);\n\t}\n\n\t/**\n\t * Traverses up the DOM tree to find data attributes that override the default plugin settings.\n\t *\n\t * @param {Element} startElement An element to start from.\n\t * @returns {Settings} The plugin settings.\n\t * @typedef {Record<\"copy\" | \"copy-error\" | \"copy-success\" | \"copy-timeout\", string | number>} Settings\n\t */\n\tfunction getSettings(startElement) {\n\t\t/** @type {Settings} */\n\t\tvar settings = {\n\t\t\t'copy': 'Copy',\n\t\t\t'copy-error': 'Press Ctrl+C to copy',\n\t\t\t'copy-success': 'Copied!',\n\t\t\t'copy-timeout': 5000\n\t\t};\n\n\t\tvar prefix = 'data-prismjs-';\n\t\tfor (var key in settings) {\n\t\t\tvar attr = prefix + key;\n\t\t\tvar element = startElement;\n\t\t\twhile (element && !element.hasAttribute(attr)) {\n\t\t\t\telement = element.parentElement;\n\t\t\t}\n\t\t\tif (element) {\n\t\t\t\tsettings[key] = element.getAttribute(attr);\n\t\t\t}\n\t\t}\n\t\treturn settings;\n\t}\n\n\tPrism.plugins.toolbar.registerButton('copy-to-clipboard', function (env) {\n\t\tvar element = env.element;\n\n\t\tvar settings = getSettings(element);\n\n\t\tvar linkCopy = document.createElement('button');\n\t\tlinkCopy.className = 'copy-to-clipboard-button';\n\t\tlinkCopy.setAttribute('type', 'button');\n\t\tvar linkSpan = document.createElement('span');\n\t\tlinkCopy.appendChild(linkSpan);\n\n\t\tsetState('copy');\n\n\t\tregisterClipboard(linkCopy, {\n\t\t\tgetText: function () {\n\t\t\t\treturn element.textContent;\n\t\t\t},\n\t\t\tsuccess: function () {\n\t\t\t\tsetState('copy-success');\n\n\t\t\t\tresetText();\n\t\t\t},\n\t\t\terror: function () {\n\t\t\t\tsetState('copy-error');\n\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tselectElementText(element);\n\t\t\t\t}, 1);\n\n\t\t\t\tresetText();\n\t\t\t}\n\t\t});\n\n\t\treturn linkCopy;\n\n\t\tfunction resetText() {\n\t\t\tsetTimeout(function () { setState('copy'); }, settings['copy-timeout']);\n\t\t}\n\n\t\t/** @param {\"copy\" | \"copy-error\" | \"copy-success\"} state */\n\t\tfunction setState(state) {\n\t\t\tlinkSpan.textContent = settings[state];\n\t\t\tlinkCopy.setAttribute('data-copy-state', state);\n\t\t}\n\t});\n}());\n"],"names":["registerClipboard","element","copyInfo","addEventListener","navigator","clipboard","writeText","getText","then","success","fallbackCopyTextToClipboard","copyTextToClipboard","textArea","document","createElement","value","style","top","left","position","body","appendChild","focus","select","successful","execCommand","setTimeout","error","err","removeChild","Prism","plugins","toolbar","registerButton","env","settings","startElement","key","attr","hasAttribute","parentElement","getAttribute","getSettings","linkCopy","className","setAttribute","linkSpan","setState","textContent","resetText","window","getSelection","selectAllChildren","selectElementText","state","console","warn"],"sourceRoot":""}